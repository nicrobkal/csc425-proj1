38,39c38,39
<     int masterSocket = 0, serverSock = 0;
<     int maxLen = 256;
---
>     int serverSock = 0, telnetSock = 0;
>     int maxLen = 1024;
41c41
<     struct sockaddr_in telnetAddr = {0};
---
>     struct sockaddr_in telnetAddr;
43,44c43
<     struct sockaddr_in serverAddr = {0};
<     int serverAddrLen = sizeof(serverAddr);
---
>     struct sockaddr_in serverAddr;
50c49
<     if(argc != 2)
---
>     if(argc != 4)
57c56
<     if ((masterSocket = socket(AF_INET, SOCK_STREAM, 0)) == 0) 
---
>     if ((telnetSock = socket(AF_INET, SOCK_STREAM, 0)) == 0) 
64c63
<     if (setsockopt(masterSocket, SOL_SOCKET, SO_REUSEADDR | SO_REUSEPORT, &opt, sizeof(opt))) 
---
>     if (setsockopt(telnetSock, SOL_SOCKET, SO_REUSEADDR | SO_REUSEPORT, &opt, sizeof(opt))) 
75c74
<     if(bind(masterSocket, (struct sockaddr *)&telnetAddr, sizeof(telnetAddr)) < 0) 
---
>     if(bind(telnetSock, (struct sockaddr *)&telnetAddr, sizeof(telnetAddr)) < 0) 
77c76
<         fprintf(stderr, "Server binding failed. Terminating.\n");
---
>         fprintf(stderr, "Binding failed. Terminating.\n");
82c81
<     if (listen(masterSocket, 3) < 0) 
---
>     if (listen(telnetSock, 3) < 0) 
89c88
<     if ((masterSocket = accept(masterSocket, (struct sockaddr *)&telnetAddr, (socklen_t*)&telnetAddrLen))<0) 
---
>     if ((telnetSock = accept(telnetSock, (struct sockaddr *)&telnetAddr, (socklen_t*)&telnetAddrLen))<0) 
91c90
<         fprintf(stderr, "Server accept failed. Terminating.\n");
---
>         fprintf(stderr, "Accept failed. Terminating.\n");
95,98c94,95
<     fprintf(stderr, "Connected to cproxy!");
< 
<     //Create socket file descriptor
<     if ((serverSock = socket(AF_INET, SOCK_STREAM, 0)) == 0) 
---
>     //Create initial socket
>     if ((serverSock = socket(AF_INET, SOCK_STREAM, 0)) < 0) 
100,101c97,98
<         fprintf(stderr, "Socket failed to connect. Terminating.\n");
<         return 1;
---
>         printf("Failed to create socket. Terminating.\n"); 
>         return 1; 
103,127c100,102
<        
<     //Attach socket to port
<     if (setsockopt(serverSock, SOL_SOCKET, SO_REUSEADDR | SO_REUSEPORT, &opt, sizeof(opt))) 
<     { 
<         fprintf(stderr, "Failed setting sock options. Terminating.\n");
<     	return 1;
<     }
< 
<     serverAddr.sin_family = AF_INET; 
<     serverAddr.sin_addr.s_addr = INADDR_ANY;
<     serverAddr.sin_port = htonl(22);
<   
<     //Bind ip to socket
<     if (bind(serverSock, (struct sockaddr *)&serverAddr, sizeof(serverAddr)) < 0) 
<     {
<         perror("bind");
<         return 1;
<     }
<     
<     //Enable listening on given socket
<     if (listen(serverSock, 3) < 0) 
<     { 
<         fprintf(stderr, "Listening failed. Terminating.\n"); 
<         exit(EXIT_FAILURE); 
<     }
---
>    
>     serverAddr.sin_family = AF_INET;
>     serverAddr.sin_port = htons(atoi(argv[3])); 
129,132c104,105
<     fprintf(stderr, "Waiting on something to accept...");
< 
<     //Accept the client
<     if ((serverSock = accept(serverSock, (struct sockaddr *)&serverAddr, (socklen_t*)&serverAddrLen))<0) 
---
>     //Bind IP to socket
>     if(inet_pton(AF_INET, argv[2], &serverAddr.sin_addr) <=0 )  
134c107
<         fprintf(stderr, "Telnet accept failed. Terminating.\n");
---
>         printf("Invalid Server Address. Terminating.\n"); 
135a109,115
>     } 
>    
>     //Connect to server
>     if (connect(serverSock, (struct sockaddr *)&serverAddr, sizeof(serverAddr)) < 0) 
>     { 
>         printf("Connection Failed \n"); 
>         return 1; 
138,139d117
<     fprintf(stderr, "Connected to something else!");
< 
148c126
<         FD_SET(masterSocket, &readfds);
---
>         FD_SET(telnetSock, &readfds);
152c130
<         if(masterSocket > serverSock)
---
>         if(telnetSock > serverSock)
154c132
<             n = masterSocket + 1;
---
>             n = telnetSock + 1;
166,169c144,147
<             fprintf(stderr, "Select() function failed.\n");
<             close(masterSocket);
<             close(serverSock);
<             return 1;
---
>             fprintf(stderr, "Select() function failed.");
> 	    close(telnetSock);
> 	    close(serverSock);
> 	    return 1;
173,176c151,154
<             printf("Timeout occurred! No data after 10.5 seconds.\n");
<             close(masterSocket);
<             close(serverSock);
<             return 1;
---
>             printf("Timeout occurred! No data after 10.5 seconds.");
>             close(telnetSock);
> 	    close(serverSock);
> 	    return 1;
181c159
<             if(FD_ISSET(masterSocket, &readfds))
---
>             if(FD_ISSET(telnetSock, &readfds))
183c161
<                 recv(masterSocket, telnetBuff, maxLen, 0);
---
>                 recv(telnetSock, telnetBuff, maxLen, 0);
185c163
<                 printf("%s", telnetBuff);
---
> 		printf("%s", telnetBuff);
190,191c168,169
<                 send(masterSocket, serverBuff, strlen(serverBuff), 0);
<                 printf("%s", serverBuff);
---
>                 send(telnetSock, serverBuff, strlen(serverBuff), 0);
> 		printf("%s", serverBuff);
194,204c172,180
< 
<             //Sanitize buffers
<         int i;
<         for(i = 0; i < 1025; i++)
<         {
<             telnetBuff[i] = '\0';
<             serverBuff[i] = '\0';
<         }
<     }
< 
<     /*
---
> 	
> 	//Sanitize buffers
> 	int i;
> 	for(i = 0; i < 1025; i++)
> 	{
> 	    telnetBuff[i] = '\0';
> 	    serverBuff[i] = '\0';
> 	}
>         /*
206,212c182,188
<     uint32_t temp = htonl(strlen(removeNewline(telnetBuff)));
<     
<     //Checks if string is valid
<     if(strlen(removeNewline(telnetBuff)) > 0)
<     {
<         //Send the first packet holding the size of the coming message in bytes
<         send(serverSock, &temp, 4, 0);
---
>         uint32_t temp = htonl(strlen(removeNewline(telnetBuff)));
>         
>         //Checks if string is valid
>         if(strlen(removeNewline(telnetBuff)) > 0)
>         {
>             //Send the first packet holding the size of the coming message in bytes
>             send(serverSock, &temp, 4, 0);
214,215c190,191
<         //Sanitize input
<         char* newBuff = removeNewline(telnetBuff);
---
>             //Sanitize input
>             char* newBuff = removeNewline(telnetBuff);
217,218c193,194
<         //Send the actual message
<         send(serverSock, newBuff, strlen(newBuff), 0); 
---
>             //Send the actual message
>             send(serverSock, newBuff, strlen(newBuff), 0); 
220,225c196,201
<         //Check if packet was valid
<         if(valRead < 0)
<         {
<             fprintf(stderr, "Failed to read from sock. Terminating.\n");
<             return 1;
<         }
---
>             //Check if packet was valid
>             if(valRead < 0)
>             {
>                 fprintf(stderr, "Failed to read from sock. Terminating.\n");
>                 return 1;
>             }
227,233c203,210
<         //Sanitizr telnetBuff
<         int i;
<         for(i = 0; i < 1025; i++)
<         {
<             telnetBuff[i] = '\0';
<         }
<     }*/
---
>             //Sanitizr telnetBuff
>             int i;
>             for(i = 0; i < 1025; i++)
>             {
>                 telnetBuff[i] = '\0';
>             }
>         }*/
>     }
236c213
<     close(masterSocket);
---
>     close(telnetSock);
